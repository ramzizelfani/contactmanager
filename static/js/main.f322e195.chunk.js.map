{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","response","this","data","console","log","message","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","bind","float","color","to","Contacts","key","TextInputGroup","label","placeholder","onChange","pattern","error","htmlFor","classnames","defaultProps","AddContact","errors","target","onSubmit","preventDefault","test","newContact","post","history","push","EditContact","match","params","updatedContact","put","Header","branding","About","Test","title","body","fetch","json","App","exact","path","component","NotFound","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f322e195.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: (action) => {\r\n      this.setState((state) => reducer(state, action));\r\n    },\r\n  };\r\n  async componentDidMount() {\r\n    try {\r\n      const response = await axios.get(\r\n        'https://jsonplaceholder.typicode.com/users'\r\n      );\r\n      this.setState({\r\n        contacts: response.data,\r\n      });\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      return;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n  onShowClick = (e) => {\r\n    this.setState({ showContactInfo: !this.state.showContactInfo });\r\n  };\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/{id}`);\r\n      dispatch({\r\n        type: 'DELETE_CONTACT',\r\n        payload: id,\r\n      });\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      dispatch({\r\n        type: 'DELETE_CONTACT',\r\n        payload: id,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card card-body mb-3'>\r\n              <h4>\r\n                {name}{' '}\r\n                <i\r\n                  onClick={this.onShowClick}\r\n                  className='fas fa-sort-down'\r\n                  style={{ cursor: 'pointer' }}\r\n                ></i>\r\n                <i\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                  className='fas fa-trash-alt'\r\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                ></i>\r\n                <Link to={`/contact/edit/${id}`}>\r\n                  <i\r\n                    className='fas fa-pencil-alt mr-3'\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      float: 'right',\r\n                      color: 'black',\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className='list-group'>\r\n                  <li className='list-group-item'>Email: {email}</li>\r\n                  <li className='list-group-item'>Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component, Fragment } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { contacts } = value;\r\n          return (\r\n            <Fragment>\r\n              <h1 className='display-4 mb-2'>\r\n                <i\r\n                  className='fas fa-address-book mr-3'\r\n                  style={{ color: 'red' }}\r\n                ></i>\r\n                <span className='text-danger'>Contacts</span>\r\n              </h1>\r\n              {contacts.map((contact) => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  pattern,\r\n  error,\r\n}) => {\r\n  return (\r\n    <div className='form-group'>\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error,\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        pattern={pattern}\r\n      />\r\n\r\n      {error && <div className='invalid-feedback'>{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  pattern: PropTypes.string,\r\n  error: PropTypes.string,\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text',\r\n};\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {},\r\n  };\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n    if (!/([\\w.\\-_]+)?\\w+@[\\w-_]+(.\\w+){1,}/i.test(email)) {\r\n      this.setState({ errors: { email: 'An Email is required' } });\r\n      return;\r\n    }\r\n    if (\r\n      !/(\\(?\\+?\\d{1,3}\\)?[\\s-]+)?\\(?\\d{1,3}\\)?[\\s-]+\\d{0,3}[\\s-]?\\d{0,3}[\\s-]?\\d{0,3} /.test(\r\n        phone\r\n      )\r\n    ) {\r\n      this.setState({ errors: { phone: 'A phone number is required!' } });\r\n      return;\r\n    }\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n    const response = await axios.post(\r\n      'https://jsonplaceholder.typicode.com/users',\r\n      newContact\r\n    );\r\n    dispatch({\r\n      type: 'ADD_CONTACT',\r\n      payload: response.data,\r\n    });\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card mb-3'>\r\n              <div className='card-header'>Add Contact</div>\r\n              <div className='card-body'>\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label='Name'\r\n                    name='name'\r\n                    placeholder='Enter Name...'\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label='Email'\r\n                    type='email'\r\n                    name='email'\r\n                    placeholder='Enter email...'\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label='Phone'\r\n                    name='phone'\r\n                    placeholder='Enter a phone number...'\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type='submit'\r\n                    value='Add Contact'\r\n                    className='btn btn-light btn-block'\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {},\r\n  };\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const response = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const { name, email, phone } = response.data;\r\n    this.setState({ name, email, phone });\r\n  }\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    const { id } = this.props.match.params;\r\n    //Check for validation errors\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n    if (!/([\\w.\\-_]+)?\\w+@[\\w-_]+(.\\w+){1,}/i.test(email)) {\r\n      this.setState({ errors: { email: 'An Email is required' } });\r\n      return;\r\n    }\r\n    if (\r\n      !/(\\(?\\+?\\d{1,3}\\)?[\\s-]+)?\\(?\\d{1,3}\\)?[\\s-]+\\d{0,3}[\\s-]?\\d{0,3}[\\s-]?\\d{0,3} /.test(\r\n        phone\r\n      )\r\n    ) {\r\n      this.setState({ errors: { phone: 'A phone number is required!' } });\r\n      return;\r\n    }\r\n    // Update contact here\r\n    const updatedContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    console.log(id);\r\n    const response = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updatedContact\r\n    );\r\n    dispatch({\r\n      type: 'UPDATE_CONTACT',\r\n      payload: response.data,\r\n    });\r\n\r\n    // Clear the state and input fields\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card mb-3'>\r\n              <div className='card-header'>Edit Contact</div>\r\n              <div className='card-body'>\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label='Name'\r\n                    name='name'\r\n                    placeholder='Enter Name...'\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label='Email'\r\n                    type='email'\r\n                    name='email'\r\n                    placeholder='Enter email...'\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label='Phone'\r\n                    name='phone'\r\n                    placeholder='Enter a phone number...'\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type='submit'\r\n                    value='Update Contact'\r\n                    className='btn btn-light btn-block'\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className='navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0'>\r\n      <div className='container'>\r\n        <Link to='/' className='navbar-brand'>\r\n          {branding}\r\n        </Link>\r\n        <div>\r\n          <ul className='navbar-nav mr-auto'>\r\n            <li className='nav-item'>\r\n              <Link to='/' className='nav-link'>\r\n                <i className='fas fa-home' /> Home\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link to='/contact/add' className='nav-link'>\r\n                <i className='fas fa-plus' /> Add\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link to='/about' className='nav-link'>\r\n                <i className='fas fa-question-circle' />\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: 'My App',\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired,\r\n};\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1 className='display-4'>About Contact manager</h1>\r\n      <p className='lead'>A simple Contact Manager Web Application</p>\r\n      <p className='secondary-text'>Version 0.0.1</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className='dispaly-4'>\r\n        <span className='text-danger'>404 Page Not Found!!!</span>\r\n      </h1>\r\n      <p className='lead'>Sorry, this page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\n// import axios from 'axios';\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: '',\r\n    body: '',\r\n  };\r\n  // Get request using fetch\r\n  async componentDidMount() {\r\n    const response = await fetch(\r\n      'https://jsonplaceholder.typicode.com/posts/1'\r\n    );\r\n    console.log(response);\r\n    const data = await response.json();\r\n    console.log(data);\r\n    this.setState({\r\n      title: data.title,\r\n      body: data.body,\r\n    });\r\n  }\r\n  // Get request using axios\r\n  // async componentDidMount() {\r\n  //   const response = await axios.get(\r\n  //     'https://jsonplaceholder.typicode.com/posts/1'\r\n  //   );\r\n  //   console.log(response);\r\n  // }\r\n  // componentDidUpdate() {\r\n  //   console.log('componentDidUpdate...');\r\n  // }\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1 className='display-4'>{title}</h1>\r\n        <p className='lead'>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\nimport { Provider } from './context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className='App'>\n          <Header branding='Contact Manager' />\n          <div className='container'>\n            <Switch>\n              <Route exact path='/' component={Contacts} />\n              <Route exact path='/about' component={About} />\n              <Route exact path='/contact/add' component={AddContact} />\n              <Route exact path='/contact/edit/:id' component={EditContact} />\n              <Route exact path='/test' component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}